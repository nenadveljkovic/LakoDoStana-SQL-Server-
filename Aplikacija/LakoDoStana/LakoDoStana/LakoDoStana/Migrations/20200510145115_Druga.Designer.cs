// <auto-generated />
using System;
using LakoDoStana.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LakoDoStana.Migrations
{
    [DbContext(typeof(LDSContext))]
    [Migration("20200510145115_Druga")]
    partial class Druga
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LakoDoStana.Models.Korisnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranjaNaloga")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Pol")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("ID");

                    b.ToTable("Korisnici");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Korisnik");
                });

            modelBuilder.Entity("LakoDoStana.Models.KorisnikOglas", b =>
                {
                    b.Property<int>("KorisnikOglasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("OglasId")
                        .HasColumnType("int");

                    b.Property<string>("TipVeze")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KorisnikOglasId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("OglasId");

                    b.ToTable("KorisniciOglasi");
                });

            modelBuilder.Entity("LakoDoStana.Models.Oglas", b =>
                {
                    b.Property<int>("OglasId")
                        .HasColumnType("int");

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("BrojPregleda")
                        .HasColumnType("int");

                    b.Property<int>("BrojSoba")
                        .HasColumnType("int");

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumObjavljivanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("Kvadratura")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("TipObjekta")
                        .HasColumnType("int");

                    b.Property<int>("TipOglasa")
                        .HasColumnType("int");

                    b.HasKey("OglasId");

                    b.ToTable("Oglasi");
                });

            modelBuilder.Entity("LakoDoStana.Models.Poruka", b =>
                {
                    b.Property<int>("PorukaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdministratorID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumSlanja")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OglasivacID")
                        .HasColumnType("int");

                    b.Property<int?>("PosetilacID")
                        .HasColumnType("int");

                    b.Property<int>("PosiljalacId")
                        .HasColumnType("int");

                    b.Property<int>("PrimalacId")
                        .HasColumnType("int");

                    b.Property<bool>("Seen")
                        .HasColumnType("bit");

                    b.Property<string>("Tekst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PorukaId");

                    b.HasIndex("AdministratorID");

                    b.HasIndex("OglasivacID");

                    b.HasIndex("PosetilacID");

                    b.HasIndex("PosiljalacId");

                    b.ToTable("Poruke");
                });

            modelBuilder.Entity("LakoDoStana.Models.Administrator", b =>
                {
                    b.HasBaseType("LakoDoStana.Models.Korisnik");

                    b.Property<int>("BrojObrisanihNaloga")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Administrator");
                });

            modelBuilder.Entity("LakoDoStana.Models.Oglasivac", b =>
                {
                    b.HasBaseType("LakoDoStana.Models.Korisnik");

                    b.Property<int>("BrojPostavljenihOglasa")
                        .HasColumnType("int");

                    b.Property<int>("BrojUkupnihPregleda")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Oglasivac");
                });

            modelBuilder.Entity("LakoDoStana.Models.Posetilac", b =>
                {
                    b.HasBaseType("LakoDoStana.Models.Korisnik");

                    b.Property<int>("BrojPregledanihOglasa")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Posetilac");
                });

            modelBuilder.Entity("LakoDoStana.Models.KorisnikOglas", b =>
                {
                    b.HasOne("LakoDoStana.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LakoDoStana.Models.Oglas", "Oglas")
                        .WithMany()
                        .HasForeignKey("OglasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LakoDoStana.Models.Poruka", b =>
                {
                    b.HasOne("LakoDoStana.Models.Administrator", null)
                        .WithMany("PrimljenePoruke")
                        .HasForeignKey("AdministratorID");

                    b.HasOne("LakoDoStana.Models.Oglasivac", null)
                        .WithMany("PrimljenePoruke")
                        .HasForeignKey("OglasivacID");

                    b.HasOne("LakoDoStana.Models.Posetilac", null)
                        .WithMany("PrimljenePoruke")
                        .HasForeignKey("PosetilacID");

                    b.HasOne("LakoDoStana.Models.Korisnik", "Posiljalac")
                        .WithMany()
                        .HasForeignKey("PosiljalacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
